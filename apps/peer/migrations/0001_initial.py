# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
import apps.peer.models
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Peer',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('name', models.CharField(default='', blank=True, max_length=80, unique=True)),
                ('username', models.CharField(default='', blank=True, max_length=80)),
                ('context', models.CharField(default='default', null=True, max_length=80)),
                ('callingpres', models.CharField(choices=[('allowed_not_screened', 'Allowed not screened'), ('allowed_passed_screen', 'Allowed passed screen'), ('allowed_failed_screen', 'Allowed failed screen'), ('allowed', 'Allowed'), ('prohib_not_screened', 'Prohib not screened'), ('prohib_passed_screen', 'Prohib passed screen'), ('prohib_failed_screen', 'Prohib failed screen'), ('prohib', 'Prohib'), ('unavailable', 'Unavailable')], default='allowed_not_screened', max_length=32)),
                ('deny', models.CharField(default=None, null=True, blank=True, max_length=95)),
                ('permit', models.CharField(default=None, null=True, blank=True, max_length=95)),
                ('secret', models.CharField(default=None, null=True, blank=True, max_length=80)),
                ('md5secret', models.CharField(default=None, null=True, blank=True, max_length=80)),
                ('remotesecret', models.CharField(default=None, null=True, blank=True, max_length=250)),
                ('transport', models.CharField(choices=[('tcp', 'TCP'), ('udp', 'UDP'), ('tcp,udp', 'TCP and UDP')], default='udp', null=True, max_length=7)),
                ('host', models.CharField(default='dynamic', max_length=31)),
                ('nat', models.CharField(choices=[('yes', 'Enable NAT'), ('no', 'Disable NAT'), ('never', 'Never use NAT'), ('route', 'Route')], default='no', max_length=5)),
                ('type', models.CharField(choices=[('user', 'User'), ('peer', 'Peer'), ('friend', 'Friend')], default='friend', max_length=6)),
                ('amaflags', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('callgroup', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('callerid', models.CharField(default=None, null=True, max_length=80)),
                ('defaultip', models.GenericIPAddressField(default=None, null=True, blank=True)),
                ('dtmfmode', models.CharField(choices=[('rfc2833', 'rfc2833'), ('info', 'Info'), ('shortinfo', 'Short info'), ('inband', 'Inband'), ('auto', 'Auto')], default='auto', null=True, max_length=9)),
                ('fromuser', models.CharField(default=None, null=True, blank=True, max_length=80)),
                ('fromdomain', models.CharField(default=None, null=True, blank=True, max_length=80)),
                ('insecure', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('language', models.CharField(choices=[('Russian', 'ru'), ('English', 'en')], default=None, null=True, blank=True, max_length=4)),
                ('mailbox', models.CharField(default=None, null=True, blank=True, max_length=50)),
                ('pickupgroup', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('qualify', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('regexten', models.CharField(default=None, null=True, blank=True, max_length=80)),
                ('rtptimeout', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('rtpholdtimeout', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('setvar', models.CharField(default=None, null=True, blank=True, max_length=100)),
                ('disallow', models.CharField(default='all', null=True, max_length=100)),
                ('allow', models.CharField(default='g729;ilbc;gsm;ulaw;alaw', null=True, max_length=100)),
                ('fullcontact', models.CharField(default='', blank=True, max_length=80)),
                ('ipaddr', models.GenericIPAddressField(default='', null=True, blank=True)),
                ('port', models.PositiveIntegerField(default=5060, validators=[django.core.validators.MaxValueValidator(65535)])),
                ('defaultuser', models.CharField(default='', blank=True, max_length=80)),
                ('subscribecontext', models.CharField(default=None, null=True, blank=True, max_length=80)),
                ('directmedia', models.CharField(choices=[('yes', 'Enable directmedia'), ('no', 'Disable directmedia'), ('nonat', 'No NAT'), ('update', 'Update')], default='no', null=True, max_length=6)),
                ('trustrpid', models.CharField(choices=[('yes', 'Enable trustrpid'), ('no', 'Disable trustrpid')], default=None, null=True, blank=True, max_length=3)),
                ('sendrpid', models.CharField(choices=[('yes', 'Enable sendrpid'), ('no', 'Disable sendrpid')], default=None, null=True, blank=True, max_length=3)),
                ('progressinband', models.CharField(choices=[('yes', 'Enable progressinband'), ('no', 'Disable progressinband'), ('never', 'Never use progressinband')], default=None, null=True, blank=True, max_length=5)),
                ('promiscredir', models.CharField(choices=[('yes', 'Enable promiscredir'), ('no', 'Disable promiscredir')], default=None, null=True, blank=True, max_length=3)),
                ('useclientcode', models.CharField(choices=[('yes', 'Enable clientcode'), ('no', 'Disable clientcode')], default=None, null=True, blank=True, max_length=3)),
                ('accountcode', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('regseconds', models.IntegerField(default=0, blank=True, max_length=11)),
                ('regserver', models.CharField(default=None, null=True, blank=True, max_length=100)),
                ('useragent', models.CharField(default=None, null=True, blank=True, max_length=100)),
                ('lastms', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('callcounter', models.CharField(choices=[('yes', 'Enable callcounter'), ('no', 'Disable callcounter')], default=None, null=True, blank=True, max_length=3)),
                ('busylevel', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('allowoverlap', models.CharField(choices=[('yes', 'Enable allowoverlap'), ('no', 'Disable allowoverlap')], default=None, null=True, blank=True, max_length=3)),
                ('allowsubscribe', models.CharField(choices=[('yes', 'Enable allowsubscribe'), ('no', 'Disable allowsubscribe')], default=None, null=True, blank=True, max_length=3)),
                ('videosupport', models.CharField(choices=[('yes', 'Enable videosupport'), ('no', 'Disable videosupport')], default=None, null=True, blank=True, max_length=3)),
                ('maxcallbitrate', models.PositiveIntegerField(default=None, null=True, blank=True, max_length=11)),
                ('rfc2833compensate', models.CharField(choices=[('yes', 'Enable rfc2833compensate'), ('no', 'Disable rfc2833compensate')], default=None, null=True, blank=True, max_length=3)),
                ('session_timers', models.CharField(choices=[('accept', 'Accept'), ('refuse', 'Refuse'), ('originate', 'Originate')], default=None, max_length=9, null=True, db_column='session-timers', blank=True)),
                ('session_expires', models.IntegerField(null=True, default=None, blank=True, db_column='session-expires', max_length=11)),
                ('session_minse', models.IntegerField(null=True, default=None, blank=True, db_column='session-minse', max_length=11)),
                ('session_refresher', models.CharField(choices=[('uac', 'UAC'), ('uas', 'UAS')], default=None, max_length=3, null=True, db_column='session-refresher', blank=True)),
                ('t38pt_usertpsource', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('outboundproxy', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('callbackextension', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('registertrying', models.CharField(choices=[('yes', 'Enable registertrying'), ('no', 'Disable registertrying')], default=None, null=True, blank=True, max_length=3)),
                ('timert1', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('timerb', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('qualifyfreq', models.IntegerField(default=None, null=True, blank=True, max_length=11)),
                ('constantssrc', models.CharField(choices=[('yes', 'Enable constantssrc'), ('no', 'Disable constantssrc')], default=None, null=True, blank=True, max_length=3)),
                ('contactpermit', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('contactdeny', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('usereqphone', models.CharField(choices=[('yes', 'Enable usereqphone'), ('no', 'Disable usereqphone')], default=None, null=True, blank=True, max_length=3)),
                ('textsupport', models.CharField(choices=[('yes', 'Enable textsupport'), ('no', 'Disable textsupport')], default=None, null=True, blank=True, max_length=3)),
                ('faxdetect', models.CharField(choices=[('yes', 'Enable faxdetect'), ('no', 'Disable faxdetect')], default=None, null=True, blank=True, max_length=3)),
                ('buggymwi', models.CharField(choices=[('yes', 'Enable buggymwi'), ('no', 'Disable buggymwi')], default=None, null=True, blank=True, max_length=3)),
                ('auth', models.CharField(default='md5', blank=True, max_length=100)),
                ('fullname', models.CharField(default='', blank=True, max_length=150)),
                ('trunkname', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('cid_number', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('mohinterpret', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('mohsuggest', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('parkinglot', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('hasvoicemail', models.CharField(choices=[('yes', 'Enable hasvoicemail'), ('no', 'Disable hasvoicemail')], default=None, null=True, blank=True, max_length=3)),
                ('subscribemwi', models.CharField(choices=[('yes', 'Enable subscribemwi'), ('no', 'Disable subscribemwi')], default=None, null=True, blank=True, max_length=3)),
                ('vmexten', models.CharField(default=None, null=True, blank=True, max_length=40)),
                ('autoframing', models.CharField(choices=[('yes', 'Enable autoframing'), ('no', 'Disable autoframing')], default=None, null=True, blank=True, max_length=3)),
                ('rtpkeepalive', models.PositiveIntegerField(default=None, null=True, blank=True, max_length=11)),
                ('call_limit', models.PositiveIntegerField(null=True, default=None, blank=True, db_column='call-limit', max_length=11)),
                ('g726nonstandard', models.CharField(choices=[('yes', 'Enable g726nonstandard'), ('no', 'Disable g726nonstandard')], default=None, null=True, blank=True, max_length=3)),
                ('ignoresdpversion', models.CharField(choices=[('yes', 'Enable ignoresdpversion'), ('no', 'Disable ignoresdpversion')], default=None, null=True, blank=True, max_length=3)),
                ('allowtransfer', models.CharField(choices=[('yes', 'Enable allowtransfer'), ('no', 'Disable allowtransfer')], default=None, null=True, blank=True, max_length=3)),
                ('dynamic', models.CharField(choices=[('yes', 'Enable dynamic'), ('no', 'Disable dynamic')], default=None, null=True, blank=True, max_length=3)),
                ('user', models.ForeignKey(default=None, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
            },
            bases=(models.Model, apps.peer.models.PeerParamsMixin),
        ),
        migrations.AlterIndexTogether(
            name='peer',
            index_together=set([('ipaddr', 'port'), ('host', 'port')]),
        ),
    ]
